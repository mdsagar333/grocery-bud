[{"C:\\Users\\it care\\Desktop\\portfolio\\project-9-grocery-byd\\src\\index.js":"1","C:\\Users\\it care\\Desktop\\portfolio\\project-9-grocery-byd\\src\\App.js":"2","C:\\Users\\it care\\Desktop\\portfolio\\project-9-grocery-byd\\src\\reportWebVitals.js":"3","C:\\Users\\it care\\Desktop\\portfolio\\project-9-grocery-byd\\src\\component\\Title.js":"4","C:\\Users\\it care\\Desktop\\portfolio\\project-9-grocery-byd\\src\\component\\GroceryContainer.js":"5","C:\\Users\\it care\\Desktop\\portfolio\\project-9-grocery-byd\\src\\component\\InputData.js":"6","C:\\Users\\it care\\Desktop\\portfolio\\project-9-grocery-byd\\src\\component\\Grocery\\Grocery.js":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":269,"mtime":1610893130078,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":154,"mtime":1610889573572,"results":"12","hashOfConfig":"9"},{"size":3090,"mtime":1610993565712,"results":"13","hashOfConfig":"9"},{"size":878,"mtime":1610992214037,"results":"14","hashOfConfig":"9"},{"size":721,"mtime":1610992220300,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"h7g3zr",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\it care\\Desktop\\portfolio\\project-9-grocery-byd\\src\\index.js",[],["32","33"],"C:\\Users\\it care\\Desktop\\portfolio\\project-9-grocery-byd\\src\\App.js",[],"C:\\Users\\it care\\Desktop\\portfolio\\project-9-grocery-byd\\src\\reportWebVitals.js",[],"C:\\Users\\it care\\Desktop\\portfolio\\project-9-grocery-byd\\src\\component\\Title.js",[],"C:\\Users\\it care\\Desktop\\portfolio\\project-9-grocery-byd\\src\\component\\GroceryContainer.js",["34","35"],"import React, {useState, useEffect} from 'react';\r\nimport InputData from './InputData';\r\nimport Grocery from './Grocery/Grocery';\r\n\r\n\r\n\r\nconst GroceryContainer = () => {\r\n    const [item, setItem] = useState('');\r\n    const [lists, setList] = useState([]);\r\n    const [edit, setEdit] = useState(false);\r\n    const [updateId, setUpdateId] = useState(null);\r\n    const [message, setMessage] = useState(false);\r\n    const [dependecy, setDependency] = useState(false);\r\n\r\n\r\n    const changeHandler = (e) => {\r\n        const item = e.target.value;\r\n        setItem(item);        \r\n    }\r\n\r\n    const addItem = () => {\r\n        const newList = JSON.parse(window.localStorage.getItem('lists'));        \r\n        newList.push({text: item, id: newList.length});\r\n        window.localStorage.setItem('lists',JSON.stringify(newList));\r\n        setList(newList);\r\n        setItem('');\r\n        setMessage(!message);\r\n        setDependency(true);       \r\n        \r\n    }\r\n\r\n    const updateItem = (id) => {       \r\n        const totalList = JSON.parse(window.localStorage.getItem('lists'));\r\n        const updatedList = totalList.map(element => {\r\n            if (element.id === id){\r\n                element.text = item;                \r\n            }\r\n            return element;\r\n        });\r\n        \r\n        window.localStorage.setItem('lists',JSON.stringify(updatedList));\r\n        setList(updatedList);\r\n        setEdit(false);\r\n        setItem('');\r\n\r\n    }\r\n\r\n    const deleteItem = (id) => {\r\n        const totalList = JSON.parse(window.localStorage.getItem('lists'));\r\n        const freshList = totalList.filter(item => item.id !== id);\r\n        window.localStorage.setItem('lists',JSON.stringify(freshList));\r\n        setList(freshList);\r\n    }\r\n\r\n    const editItem = (id) => {\r\n        const totalList = JSON.parse(window.localStorage.getItem('lists'));\r\n        const editeItem = totalList.filter(item => item.id === id);\r\n        setItem(editeItem[0]['text']);\r\n        setUpdateId(editeItem[0]['id']);\r\n        setEdit(true)\r\n    }\r\n    \r\n    useEffect(() => {\r\n        if (!JSON.parse(window.localStorage.getItem('lists'))){\r\n            window.localStorage.setItem('lists', JSON.stringify(lists));\r\n        }else {\r\n           setList(JSON.parse(window.localStorage.getItem('lists')));\r\n        }\r\n    },[]);\r\n\r\n    // useEffect(() => {\r\n    //     const added = setTimeout(() => {\r\n    //         setMessage(!message);\r\n    //     }, 2000);\r\n\r\n    //     return () => clearTimeout(added);\r\n    // }, [dependecy])\r\n\r\n    return ( \r\n        <main className='grocery-container'>\r\n            <InputData handlers={{stateHandeler: changeHandler, itemHandler: addItem, stateValue: item , editValue: edit, updateItem: updateItem, updateId: updateId}}/>\r\n            {lists.length > 0 \r\n            && \r\n            lists.map((list,index) => <Grocery key={index} data={list}  controller={{deleteItem: deleteItem, editItem:editItem}}/>)\r\n            }\r\n            {message && <span className='message-box'>Item added</span>}\r\n        </main>\r\n     );\r\n}\r\n \r\nexport default GroceryContainer;","C:\\Users\\it care\\Desktop\\portfolio\\project-9-grocery-byd\\src\\component\\InputData.js",[],"C:\\Users\\it care\\Desktop\\portfolio\\project-9-grocery-byd\\src\\component\\Grocery\\Grocery.js",["36"],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":13,"column":12,"nodeType":"43","messageId":"44","endLine":13,"endColumn":21},{"ruleId":"45","severity":1,"message":"46","line":69,"column":7,"nodeType":"47","endLine":69,"endColumn":9,"suggestions":"48"},{"ruleId":"41","severity":1,"message":"49","line":2,"column":23,"nodeType":"43","messageId":"44","endLine":2,"endColumn":43},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'dependecy' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'lists'. Either include it or remove the dependency array.","ArrayExpression",["52"],"'AiFillPropertySafety' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"53","fix":"54"},"Update the dependencies array to be: [lists]",{"range":"55","text":"56"},[2311,2313],"[lists]"]